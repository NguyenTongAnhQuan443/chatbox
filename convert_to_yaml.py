import json
import re

# ƒê·ªçc d·ªØ li·ªáu JSON
with open("rasa_dataset_training.json", "r", encoding="utf-8") as file:
    data = json.load(file)

examples = data.get("rasa_nlu_data", {}).get("common_examples", [])

# C√°c t·ª´ kh√≥a c√≥ th·ªÉ l√† ƒë·ªãa danh (district)
district_patterns = r"(Qu·∫≠n\s+\w+(?:\s\w+)*|Huy·ªán\s+\w+(?:\s\w+)*|Th√†nh ph·ªë\s+\w+(?:\s\w+)*|TP\s+\w+(?:\s\w+)*|Th·ªã x√£\s+\w+(?:\s\w+)*|Ph∆∞·ªùng\s+\w+(?:\s\w+)*|X√£\s+\w+(?:\s\w+)*)"


# Danh s√°ch c√¢u ƒë√£ x·ª≠ l√Ω
processed_examples = []

for ex in examples:
    text = ex["text"]

    # G·∫Øn entity district
    match_district = re.search(district_patterns, text, flags=re.IGNORECASE)
    if match_district:
        district = match_district.group(1)
        text = text.replace(district, f"[{district}](district)")

    # G·∫Øn entity amenities
    match_amenity = re.search(r"c√≥\s+([^\[\]()]*?)(?:\s+(?:·ªü|t·∫°i|trong|v√πng|khu|khu v·ª±c|g·∫ßn)\b|$)", text)
    if match_amenity:
        amenity = match_amenity.group(1).strip()
        text = text.replace(amenity, f"[{amenity}](amenities)")

    processed_examples.append(f"    - {text}")

# G·ªôp th√†nh YAML chu·∫©n
yaml_text = "version: \"3.1\"\nnlu:\n- intent: searchRoom\n  examples: |\n" + "\n".join(processed_examples)

# Ghi file YAML
with open("search_room_nlu.yml", "w", encoding="utf-8") as file:
    file.write(yaml_text)

print("üéâ File YAML ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng: search_room_nlu.yml")
